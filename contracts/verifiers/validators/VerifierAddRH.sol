//
// Copyright 2017 Christian Reitwiessner
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// 2019 OKIMS
//      ported to solidity 0.6
//      fixed linter warnings
//      added requiere error messages
//
//
// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.0;

library Pairing {
    struct G1Point {
        uint X;
        uint Y;
    }
    // Encoding of field elements is: X[0] * z + X[1]
    struct G2Point {
        uint[2] X;
        uint[2] Y;
    }

    /// @return the generator of G1
    function P1() internal pure returns (G1Point memory) {
        return G1Point(1, 2);
    }

    /// @return the generator of G2
    function P2() internal pure returns (G2Point memory) {
        // Original code point
        return
            G2Point(
                [
                    11559732032986387107991004021392285783925812861821192530917403151452391805634,
                    10857046999023057135944570762232829481370756359578518086990519993285655852781
                ],
                [
                    4082367875863433681332203403145435568316851327593401208105741076214120093531,
                    8495653923123431417604973247489272438418190587263600148770280649306958101930
                ]
            );

        /*
        // Changed by Jordi point
        return G2Point(
            [10857046999023057135944570762232829481370756359578518086990519993285655852781,
             11559732032986387107991004021392285783925812861821192530917403151452391805634],
            [8495653923123431417604973247489272438418190587263600148770280649306958101930,
             4082367875863433681332203403145435568316851327593401208105741076214120093531]
        );
*/
    }

    /// @return r the negation of p, i.e. p.addition(p.negate()) should be zero.
    function negate(G1Point memory p) internal pure returns (G1Point memory r) {
        // The prime q in the base field F_q for G1
        uint q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;
        if (p.X == 0 && p.Y == 0) return G1Point(0, 0);
        return G1Point(p.X, q - (p.Y % q));
    }

    /// @return r the sum of two points of G1
    function addition(
        G1Point memory p1,
        G1Point memory p2
    ) internal view returns (G1Point memory r) {
        uint[4] memory input;
        input[0] = p1.X;
        input[1] = p1.Y;
        input[2] = p2.X;
        input[3] = p2.Y;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 6, input, 0xc0, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success
            case 0 {
                invalid()
            }
        }
        require(success, "pairing-add-failed");
    }

    /// @return r the product of a point on G1 and a scalar, i.e.
    /// p == p.scalar_mul(1) and p.addition(p) == p.scalar_mul(2) for all points p.
    function scalar_mul(
        G1Point memory p,
        uint s
    ) internal view returns (G1Point memory r) {
        uint[3] memory input;
        input[0] = p.X;
        input[1] = p.Y;
        input[2] = s;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(sub(gas(), 2000), 7, input, 0x80, r, 0x60)
            // Use "invalid" to make gas estimation work
            switch success
            case 0 {
                invalid()
            }
        }
        require(success, "pairing-mul-failed");
    }

    /// @return the result of computing the pairing check
    /// e(p1[0], p2[0]) *  .... * e(p1[n], p2[n]) == 1
    /// For example pairing([P1(), P1().negate()], [P2(), P2()]) should
    /// return true.
    function pairing(
        G1Point[] memory p1,
        G2Point[] memory p2
    ) internal view returns (bool) {
        require(p1.length == p2.length, "pairing-lengths-failed");
        uint elements = p1.length;
        uint inputSize = elements * 6;
        uint[] memory input = new uint[](inputSize);
        for (uint i = 0; i < elements; i++) {
            input[i * 6 + 0] = p1[i].X;
            input[i * 6 + 1] = p1[i].Y;
            input[i * 6 + 2] = p2[i].X[0];
            input[i * 6 + 3] = p2[i].X[1];
            input[i * 6 + 4] = p2[i].Y[0];
            input[i * 6 + 5] = p2[i].Y[1];
        }
        uint[1] memory out;
        bool success;
        // solium-disable-next-line security/no-inline-assembly
        assembly {
            success := staticcall(
                sub(gas(), 2000),
                8,
                add(input, 0x20),
                mul(inputSize, 0x20),
                out,
                0x20
            )
            // Use "invalid" to make gas estimation work
            switch success
            case 0 {
                invalid()
            }
        }
        require(success, "pairing-opcode-failed");
        return out[0] != 0;
    }

    /// Convenience method for a pairing check for two pairs.
    function pairingProd2(
        G1Point memory a1,
        G2Point memory a2,
        G1Point memory b1,
        G2Point memory b2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](2);
        G2Point[] memory p2 = new G2Point[](2);
        p1[0] = a1;
        p1[1] = b1;
        p2[0] = a2;
        p2[1] = b2;
        return pairing(p1, p2);
    }

    /// Convenience method for a pairing check for three pairs.
    function pairingProd3(
        G1Point memory a1,
        G2Point memory a2,
        G1Point memory b1,
        G2Point memory b2,
        G1Point memory c1,
        G2Point memory c2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](3);
        G2Point[] memory p2 = new G2Point[](3);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        return pairing(p1, p2);
    }

    /// Convenience method for a pairing check for four pairs.
    function pairingProd4(
        G1Point memory a1,
        G2Point memory a2,
        G1Point memory b1,
        G2Point memory b2,
        G1Point memory c1,
        G2Point memory c2,
        G1Point memory d1,
        G2Point memory d2
    ) internal view returns (bool) {
        G1Point[] memory p1 = new G1Point[](4);
        G2Point[] memory p2 = new G2Point[](4);
        p1[0] = a1;
        p1[1] = b1;
        p1[2] = c1;
        p1[3] = d1;
        p2[0] = a2;
        p2[1] = b2;
        p2[2] = c2;
        p2[3] = d2;
        return pairing(p1, p2);
    }
}

contract Verifier {
    using Pairing for *;
    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }
    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }

    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(
            20491192805390485299153009773594534940189261866228447918068658471970481763042,
            9383485363053290200918347156157836566562967994039712273449902621266178545958
        );

        vk.beta2 = Pairing.G2Point(
            [
                4252822878758300859123897981450591353533073413197771768651442665752259397132,
                6375614351688725206403948262868962793625744043794305715222011528459656738731
            ],
            [
                21847035105528745403288232691147584728191162732299865338377159692350059136679,
                10505242626370262277552901082094356697409835680220590971873171140371331206856
            ]
        );
        vk.gamma2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.delta2 = Pairing.G2Point(
            [
                11559732032986387107991004021392285783925812861821192530917403151452391805634,
                10857046999023057135944570762232829481370756359578518086990519993285655852781
            ],
            [
                4082367875863433681332203403145435568316851327593401208105741076214120093531,
                8495653923123431417604973247489272438418190587263600148770280649306958101930
            ]
        );
        vk.IC = new Pairing.G1Point[](188);

        vk.IC[0] = Pairing.G1Point(
            6751612088574091019832933677107054091083324129501480147727435460875629296131,
            16500038482540694447042783231813669329528504882325242816551281326024397700259
        );

        vk.IC[1] = Pairing.G1Point(
            4484021639784372483402322968661979257065298223479960532540534435804399590909,
            1111225201781797843161271014759406619631546378817847793459578920161302278799
        );

        vk.IC[2] = Pairing.G1Point(
            13398461451207274226491475883010019838535661940650030146769335668553208940505,
            11974997708816462637654123670118557795780355822604755353258465649267367021774
        );

        vk.IC[3] = Pairing.G1Point(
            4468805134863429811704143192757980569367759570262534768775953327997001752037,
            2182568972532866862490118030914741462442457933549291514426608239226134783704
        );

        vk.IC[4] = Pairing.G1Point(
            19394353663443661839062273505064065647244342149779681496454448847124692500415,
            2157082149794844494275128993926350546517449955006913438036112665681297777445
        );

        vk.IC[5] = Pairing.G1Point(
            876063023045234618562881761052745386998407056037960408966112953049918993114,
            136205973096381676801600947446074256771972528713239103902051150585849162664
        );

        vk.IC[6] = Pairing.G1Point(
            1966265143207105961904719553807114422770482033633180403310473920378116000395,
            18213444346199845642166259356957655631294636010820425605034667647942770543537
        );

        vk.IC[7] = Pairing.G1Point(
            18690958367053968223082181227606526512476461356469134299019118982672198507893,
            7136120289364582014114275609101899821967920681393773914829589919576065875968
        );

        vk.IC[8] = Pairing.G1Point(
            4140292459503403257395457808530684286246411615395777661848567580597402733496,
            16318426703181070550444378663908015211415902923484362699867100193142879339217
        );

        vk.IC[9] = Pairing.G1Point(
            18548249491842619319140512760200006236031854131553674161144985120885669725892,
            8309686073781234418228601909935413400818018518247907779036713658332429985155
        );

        vk.IC[10] = Pairing.G1Point(
            2960102919546097889572897421639628844309143503602717330654465075686738519636,
            10672040976172284953813815140967923310304362494892914576382018177722056864603
        );

        vk.IC[11] = Pairing.G1Point(
            21649151321878056637220557799725101114872006747220838568470562254541979120653,
            1943762593659876609844425491403589889072399228360449301544163665988287279495
        );

        vk.IC[12] = Pairing.G1Point(
            20050918942875968990087164935964871976428848086116023746009470522474528110399,
            14470905097699173288781719131453341572331965243095903568275476192982991850410
        );

        vk.IC[13] = Pairing.G1Point(
            19350644342459138899331080596518335153440978551780842368961935904046452431929,
            533707469251919455316709362524824478450700134510932303616952234855980095033
        );

        vk.IC[14] = Pairing.G1Point(
            12940121832005747158102637966688076007635275307708538423539644743750243875124,
            13885844422736017751997929581689210093883120598960771327595602912309902372890
        );

        vk.IC[15] = Pairing.G1Point(
            10885283575806104540602052413520009737545708233700947798009626055495464604928,
            19986946262065376048807404044156818427587343413255541056049977616388763009824
        );

        vk.IC[16] = Pairing.G1Point(
            13954279970801019098644067515089057839059967255021385811040805110879523585836,
            21362698811598249880697539104444820212305730449234044897469467499587965265091
        );

        vk.IC[17] = Pairing.G1Point(
            374920215325453548452684547281501297733900498854170744408963115804944787739,
            5017679162133103215099775400320634349794202846556427053233734531598010553399
        );

        vk.IC[18] = Pairing.G1Point(
            13264708491174775185953090513851824964787981063702002209357901415186466426512,
            5628768809732259775536011963851706353084461118610921499846172786842246440470
        );

        vk.IC[19] = Pairing.G1Point(
            14288890087566944453565831256201726534478251227662591654089286534353491013347,
            9620519416897819669519217550475544458737369468491605533921905110616365778773
        );

        vk.IC[20] = Pairing.G1Point(
            9049325377309140439944834130618374703408114135742585822204603571894764870036,
            12728450606917972889990912226444763004976362337728089891255837385406473572387
        );

        vk.IC[21] = Pairing.G1Point(
            15091782958889348072370619271490673035310640265033854539153407645774973434705,
            19656005606699388342570847417641603906994821627302318909351364824174636071953
        );

        vk.IC[22] = Pairing.G1Point(
            14830286471002219923896956489864453995397707313833258607469684264340890310482,
            14918412518289647938443120395410176282559838693599833929394548308279062350148
        );

        vk.IC[23] = Pairing.G1Point(
            3341549710804113088178981245288969447498381540866053887861389313886455526377,
            752431611338546554844524308222315249322073645702868588038530721911502783103
        );

        vk.IC[24] = Pairing.G1Point(
            9012251513719044976296005000672238326559557914632164245222252335941639079909,
            18221697314210853398026010363728303078561377737824087107507470516781928701450
        );

        vk.IC[25] = Pairing.G1Point(
            715335178286492723755970095856998206598814082755583303844483366737321736644,
            20211104848446853090737803794768424096402242932839001712796549402820547904572
        );

        vk.IC[26] = Pairing.G1Point(
            14150184611853486736644935511898679711171712782370521825447981284369532928643,
            14226235806819338261399581433249574265688313814510763650751746791616768005134
        );

        vk.IC[27] = Pairing.G1Point(
            15482327092425920439734269012018594480274176887965314336201539497865596909355,
            17027192407969527262242174362024633376740868207964604381905667633154272671170
        );

        vk.IC[28] = Pairing.G1Point(
            9255584935171016914410253505555619638525151827714431310408289279752907330135,
            8954357096331086541823425627100102314474198375532476764725141148028420934022
        );

        vk.IC[29] = Pairing.G1Point(
            13532218450058890636025125884025405283972415967975192209380763300586499461985,
            11101163574528903859803409049500047053673168572003636691856170357500658466447
        );

        vk.IC[30] = Pairing.G1Point(
            5797903439035026133158014976587444481637477109125618713317851294098253188829,
            3647031464329287588550390005512839477358265069033304684403756528230175009688
        );

        vk.IC[31] = Pairing.G1Point(
            7919542423449378985960317413700016766960073890125109719165170644790742042683,
            20233462414494802827282029687959062709402142878923320793618311631455401688347
        );

        vk.IC[32] = Pairing.G1Point(
            12792370328129845036330285419783893742835310679551097013693150554911834488668,
            5359528740848737566956432943975371772008558293695384192988333104127578821715
        );

        vk.IC[33] = Pairing.G1Point(
            18693060302289119347029330125669008826615451410873947252523440749387845069052,
            3273315107116240683847916413347373697676866042957702193755737429237151504306
        );

        vk.IC[34] = Pairing.G1Point(
            14144659274444447697251338247944550313689860782847428541195442037080286628317,
            10790924936141562393936335217346516717571484922327528320805666680638344038251
        );

        vk.IC[35] = Pairing.G1Point(
            7432668823084353355339582239845748383435035052604518714767583314733110149357,
            16739843472762159499569064477960767859336913940924508531235696994954386432728
        );

        vk.IC[36] = Pairing.G1Point(
            8246507293978268879733847276081731957433389630468123394399910341327116120605,
            3364715582368215887805425346302916673794698330607196073800206183839371876171
        );

        vk.IC[37] = Pairing.G1Point(
            13255453405725592232661109765450204169462293046388693601705247724779705214958,
            20743107891510663387836860986971207739602168332722238554649846147965893468014
        );

        vk.IC[38] = Pairing.G1Point(
            14850367983959160037795385893277802115443022402575029438242995847724926154918,
            5300345732163668557301897988466745409516092734266536564987781971938674200610
        );

        vk.IC[39] = Pairing.G1Point(
            21400499290360313046762361798136591025187248984423422636934655070478231917040,
            17878999869535798287091976860521866858085457105808101840034687437859945850543
        );

        vk.IC[3] = Pairing.G1Point(
            11472248031268129787697517817183693800580362882404135797226096465463308180871,
            3968497352286309469617974197539506760166377549964926275647725729214912267278
        );

        vk.IC[41] = Pairing.G1Point(
            7547306177435364900608446743782993039444112158292913217095683099532884474473,
            590805202830597284759242148267327038750957679365601357384690521120022615955
        );

        vk.IC[42] = Pairing.G1Point(
            2483093721454390103490863249757725638767924641060552661414079497623241597719,
            20587756606365316259194181341536225118042164382453776197295852875827655854730
        );

        vk.IC[43] = Pairing.G1Point(
            438103809456506205059669185164807248962495189936600463078208297802761504040,
            11512347979943735380770615614639738506939054190051800296290951909165687919976
        );

        vk.IC[44] = Pairing.G1Point(
            11642075046946108052734820929551567684967921138304601936678046972128748012107,
            20721074167155693041768125500486197848301200310460721834661161380480526203226
        );

        vk.IC[45] = Pairing.G1Point(
            932422070705852646081056178693064778936497780527960392319318704722713931659,
            580952966630091593620067295617091366528701375503188155919356503087746852072
        );

        vk.IC[46] = Pairing.G1Point(
            217414735917985661617427656396498578322130247126927932532236838935086666876,
            16375049864652949208132387423392502835682198919422324094921507399236772741642
        );

        vk.IC[47] = Pairing.G1Point(
            11228713057371795144838988264305650543607112372330343766199905148126243167503,
            15030388218384210591634967816895562112077172438138856345458133228720891888935
        );

        vk.IC[48] = Pairing.G1Point(
            17674930120584623820440840138350573016986513048837393138186330373668614013217,
            21408457147698510706508771427187224289436451939899395605907315800533327726779
        );

        vk.IC[49] = Pairing.G1Point(
            8836187873183676821988119626888366654542228019272857434407601647400778544528,
            2878699027791494542930950342872753757565955812718980209002710625710988357017
        );

        vk.IC[50] = Pairing.G1Point(
            95867538356994520856692295728641480335374017394016155086770395116025104609,
            13518330196693628726591730009027578805858910357415410213058136954047346415415
        );

        vk.IC[51] = Pairing.G1Point(
            7966907770534065527187773790548022811438006309120413686618084394115681535704,
            19404284425757578348622521479335850278875518291460558172154448524278354022447
        );

        vk.IC[52] = Pairing.G1Point(
            14348856737010133964307088379368943999927643978236236550708860238899337293393,
            10909158911904176514002011250321748290263216505754935176193600028408224321858
        );

        vk.IC[53] = Pairing.G1Point(
            12555830952093923693351330017535954592693945792631351433945644041949212997776,
            960948395650461014878816085238910779590655178686772481839645891983164567750
        );

        vk.IC[54] = Pairing.G1Point(
            16973620151529752914256739139749228250860874789342525477983591813283964223387,
            20390378283767918673120280740301370226622872829689421704175239318324013917913
        );

        vk.IC[55] = Pairing.G1Point(
            4563882864412142895479823255639654697011629295352082775273274051366291908246,
            6638869454868503827076279120273090666502833426431107123914159178577227627616
        );

        vk.IC[56] = Pairing.G1Point(
            18984949851434641885570693203809794180147865455880588054280588345181114361294,
            20740661282616213434576507468408481365624282541921338627216084204627782005756
        );

        vk.IC[57] = Pairing.G1Point(
            19835340146172899929617942265765481970404467768891574739901669659994393176745,
            4751923388461763118048975251286959503196242030771551483371738101088277123313
        );

        vk.IC[58] = Pairing.G1Point(
            18344547469319030831001337742813804304658862458466507498493907627304512044932,
            13518360036542058595912156321884032601128626782564638568408820663062538479386
        );

        vk.IC[59] = Pairing.G1Point(
            3601832443559121588979691141858369043877049419601081861648123441199162867074,
            3291246275919531834504537230941264364401473148264739583492771746423615389712
        );

        vk.IC[60] = Pairing.G1Point(
            5308371945371482928972079130112090885822030653780204473303187038780618964876,
            12391010028059370408025295842072227510571267261292958042743493387757225429023
        );

        vk.IC[61] = Pairing.G1Point(
            11421531848605716781517238773639341615631090010842999650778583240313577598901,
            7959300427516805840219704769859975327688188261790800738090017352841472710237
        );

        vk.IC[62] = Pairing.G1Point(
            21708208185415963830359869895286673457154700293464212177902726330353016008822,
            13033917721787398663853466694747862723513709548460210264837774251030538039993
        );

        vk.IC[63] = Pairing.G1Point(
            12491119864794392858196921358771707242965293628306007079291010986703553818699,
            9161325655565086383389350144373088633890417945301733665887544866375902091171
        );

        vk.IC[64] = Pairing.G1Point(
            8145454652011612071647010314066983269950247866928127692026582853250553717672,
            15937729414979192837220868576951098481784610485184227449140095986118951918520
        );

        vk.IC[65] = Pairing.G1Point(
            13025660389046726941301685764069484525249374333761470092749457622895454565199,
            9410074878556054093887135784542050326151929945432448161107100146341700069749
        );

        vk.IC[66] = Pairing.G1Point(
            12918241464258565247156838653332910604964585804958059456701879452538386673306,
            3867322125077912655706656844245980927218133792941974467294943516963562901522
        );

        vk.IC[67] = Pairing.G1Point(
            18816301440032659797115799672163483714808657949946769937015909237586708561620,
            9425297740584382412508919194747408580466254592148847025545387880004942199345
        );

        vk.IC[68] = Pairing.G1Point(
            8052457483872244377951386608155391854586674607618920502138280928443710844801,
            14870877909394566040412363718333198288379682243047685912729604099520144290381
        );

        vk.IC[69] = Pairing.G1Point(
            14906573015695506630822383515176243019244474758882145721269256536275109441925,
            12280714413238125296106707352253105457844268282920184650811773399751123628359
        );

        vk.IC[70] = Pairing.G1Point(
            5290669769668875299352650581198705128197103930476154601328409867122226155184,
            21327727918301178420304097721800717392064772072923553218506708721783080690528
        );

        vk.IC[71] = Pairing.G1Point(
            11878385568515091451417339380614497835294008580300842714274632386740084383932,
            21472843460257521411100885785878146520172616928490632633056629078791685835593
        );

        vk.IC[72] = Pairing.G1Point(
            4361038579219673745324234354311677936901334979671701212528924863913985215083,
            18774627881911852347265498322461721014902649562757440195127193989827205132511
        );

        vk.IC[73] = Pairing.G1Point(
            2061979142080607443130617953477996807828559948080786555567166263560553922951,
            3323443796673043256844533025271248803467578987088326295668603734544078371293
        );

        vk.IC[74] = Pairing.G1Point(
            21035338198055095922317539768304665431243259947213786817895199022948061114917,
            17454921548409864441170675049301102541941039467983122743900063345311694501331
        );

        vk.IC[75] = Pairing.G1Point(
            13546329905433490278833112341027284876342195832021166032105420057072734543637,
            2774904392200747139694477160086445930057363993536911598803528488542397429220
        );

        vk.IC[76] = Pairing.G1Point(
            7530471726837602521282159138735529316461693211469582794874150995083788738475,
            793042174271152592511861022771614789657660509672211159682051335454035784824
        );

        vk.IC[77] = Pairing.G1Point(
            18858188751380024462011030850649426063427428992017392826233094100295706044406,
            13756748861567771324460251553725004142545008372541971589481061691444132508923
        );

        vk.IC[78] = Pairing.G1Point(
            20718087927648625616317706103806532707692237733566106450064369893569405558085,
            4900391417443599431554530511973397191213381978971671287257833799826007545539
        );

        vk.IC[79] = Pairing.G1Point(
            2424007923464327127150810581790709715250709634352192363807605573246417307048,
            3919195737947270326236957896350380304476768379620041902556121126606848988261
        );

        vk.IC[80] = Pairing.G1Point(
            13144359551285010361398932460919239885249649242436642057914826717256159975271,
            9644859543401406261304021179930337366399428872760735713362590768035524840752
        );

        vk.IC[81] = Pairing.G1Point(
            14796826079832915814577873367790389423263761042562299458642116443764347563742,
            5984005879605526035887445193391031472580571238466331883938295126445933163511
        );

        vk.IC[82] = Pairing.G1Point(
            7810883758831107183145859687619653136849190680246377019718618234537656457156,
            18806794889598770462315335429643402735897405585976158779055752905292838804739
        );

        vk.IC[83] = Pairing.G1Point(
            1311784395902993594425259079976871575273403675566845779731156605965845132214,
            20603919693130795521532958127291697086065537471307613050614274987129132177878
        );

        vk.IC[84] = Pairing.G1Point(
            7071108802526891136152207432997033037209954268135401867388281177760450659915,
            18300131347983629359602531070074795805841156963221434074578336227956524679830
        );

        vk.IC[85] = Pairing.G1Point(
            2276299291029878659928732452807171080134639110818806184238739921141939033766,
            16066211140489065824957003988178552018044732523175681170577966027181119669945
        );

        vk.IC[86] = Pairing.G1Point(
            11867351603807324592521719809864021627015912646628570559776058776923127386978,
            18397962623699705937024330961639922861561274642497488206846935132789334451699
        );

        vk.IC[87] = Pairing.G1Point(
            5357043843336530242482809078916251853233097238770416043799086513527320200858,
            25130364539806210989276850700207852175985540898297148495731311197248392191
        );

        vk.IC[88] = Pairing.G1Point(
            18004640529129209065244984499566954105451568365113722210314315136201129226186,
            20827403153270396847802691808624751609046500983128797220640791590514729041980
        );

        vk.IC[89] = Pairing.G1Point(
            1755541199500456004595048127078691587266825538314653999639588611617773198147,
            13050089252235614757325596515155628595252123273084918281063655938765895319338
        );

        vk.IC[90] = Pairing.G1Point(
            10745156859036722197512974733366836565657263266007658373442755640631048424134,
            5038745000721902995985692159895304065461612275177262907883597364499810961478
        );

        vk.IC[91] = Pairing.G1Point(
            17334528598218733651472888677465278264947860147942267426285727853999004187079,
            16762657299812205764293586408520674006669988475411182791290277303525321927107
        );

        vk.IC[92] = Pairing.G1Point(
            15587648278923336708568979100078065163999604561978833967146528138473007988180,
            17498531203172846797158170419405588435305090767255769102205837750734453111860
        );

        vk.IC[93] = Pairing.G1Point(
            12350430189205349732427917827576718042733852847814536776317699309162026243995,
            20233601276898885955256274290986425306506153747519569531211347106188823269767
        );

        vk.IC[94] = Pairing.G1Point(
            16881449475097719438457391495050353437436983251346626626430058512485248705451,
            16667336144681861658259169276820563722291810385614195715235285680932187321650
        );

        vk.IC[95] = Pairing.G1Point(
            2924005511765207031550422531714456004587196651990034463878000809292445572949,
            19313821335700534540486501339303047426007489280743950419311579718253917067320
        );

        vk.IC[96] = Pairing.G1Point(
            12366436779669900819806826196871639753724384383184839264582743922497051331931,
            3018664181506246010037467820507913206975565765182835878440276061738582773514
        );

        vk.IC[97] = Pairing.G1Point(
            7409538502424465176191978027611328683238172729674133844177324075527184226983,
            19223256625203586730419035767357214249207628322006408218010925107878679951454
        );

        vk.IC[98] = Pairing.G1Point(
            17948860444416599998182777278257462880966011002806077620319176610985554860997,
            19412798101147470619940671273915060638724862540892390855338011971230325321643
        );

        vk.IC[99] = Pairing.G1Point(
            12291823514166001474905813070972182946428340434723164023046929307022573263083,
            9132873127902616076429507349711173697888606903932952609975099738895041487545
        );

        vk.IC[100] = Pairing.G1Point(
            7616917661912479458082033611431479738245307450392580090744318874681057418082,
            18137145719919836603161223107535574034430447077384632786114480174906945631776
        );

        vk.IC[101] = Pairing.G1Point(
            11670698202864883003249650595242910603532229065156423449568667579952655663615,
            11958185609234013180825268801838984583036949576098641541632423283923912547038
        );

        vk.IC[102] = Pairing.G1Point(
            1729246509520056589273463013695252291460886793889919478232092612341213634781,
            8433653229234734410885448961358020440388441432564988568268136799641176293964
        );

        vk.IC[103] = Pairing.G1Point(
            4040900897235617005211992092495748097889425312571223561287850293505088411754,
            7622589947056840998992360926656400207435504265167129975414181769984995244818
        );

        vk.IC[104] = Pairing.G1Point(
            1893068595284423566219398361249606073904646185837289984540512419853694881705,
            19785717053097148756189944603706436000533425337541497073625555182942294277245
        );

        vk.IC[105] = Pairing.G1Point(
            17882105198965035532603594354952428254230162392591732416531377746707197915927,
            10336921323002403249738794142693122366622274802684887756401048313591929770026
        );

        vk.IC[106] = Pairing.G1Point(
            19115692364923073129925744157121200275527130176906963509528681837925226323703,
            7046543767145230671421021651049133388542658710390596676751152793437972645009
        );

        vk.IC[107] = Pairing.G1Point(
            10619135745695121292556797124254075660548308432481072528693338287614043573720,
            11521596558085098811232333475160049393429191580425287692465714229994072282745
        );

        vk.IC[108] = Pairing.G1Point(
            16281541731690639544236722085588878619455941889142309630269834850956007394585,
            19190506161062731468618876230199047285357121032242009102325225455658458612453
        );

        vk.IC[109] = Pairing.G1Point(
            2115605410285790020831265412030740527416376326245267860971067778271533384521,
            10198127812175372287468409504317098110938994099462073775600589665843055734768
        );

        vk.IC[110] = Pairing.G1Point(
            11727458339207611749246428645602875775247489763617861992204693136864373374982,
            5028798270291682906436779231257941059807945943706967733169883795764388385735
        );

        vk.IC[111] = Pairing.G1Point(
            13118634666013789520949221489587053377955072512316828489417101034880061422099,
            19074938682411233245266680450689988180494312082753281279960052907732900260115
        );

        vk.IC[112] = Pairing.G1Point(
            4732566921531784469854709965390178053382919361111305544438227550482402142678,
            15509179214183452042800022510648014645394921786663350121918386918203301545012
        );

        vk.IC[113] = Pairing.G1Point(
            15045423872697263002042466705301100822373936111535154183278227476014052406732,
            366978822731507770196594833880128964445661072869759068733959276244674869923
        );

        vk.IC[114] = Pairing.G1Point(
            20622914692464841867558448543439817053518007582485959827482727526225265501834,
            21776548213322477249365600180009904711452841125987485753981859210106221437910
        );

        vk.IC[115] = Pairing.G1Point(
            17621833915185268209924807744849114771346114346875586756296423551830082052907,
            11451968027397872307987773308761753522364693195025792039287391842847039272637
        );

        vk.IC[116] = Pairing.G1Point(
            500997503045898709111623663464563318968580002497209642077484071224682031724,
            2477480289887186254206716502962097002006368733815765648639128553309180099652
        );

        vk.IC[117] = Pairing.G1Point(
            4118963547898005627815318614456407595195736105205854831691548941610256973222,
            6120700090563067705491284428954511172746697723719591169593801094938016264877
        );

        vk.IC[118] = Pairing.G1Point(
            4569083237984634707778094249192183625594992538052609840383681209458330106922,
            21743408070375183702706683814301969641044075288801477529188873124552569334652
        );

        vk.IC[119] = Pairing.G1Point(
            19847282566481003283460664496296412163588958569446908190247625391651794125477,
            15009438691961047327380092669542019887601830779013714477188603361585122902783
        );

        vk.IC[120] = Pairing.G1Point(
            4507102061255834922447783893406416842492751255960711115834305836153611032983,
            2559369750303917223695902202977883960782011797449556373598081337056841425423
        );

        vk.IC[121] = Pairing.G1Point(
            5525695809031487945505732678104875741804803637415292325690503010658985088374,
            16629438550513361962573369654758365808719623377510502034728226741689559606167
        );

        vk.IC[122] = Pairing.G1Point(
            11916940375453788589275712831799188536935533035284309957628316720994784046518,
            9698642116873337772176145266961252779838440527729230055090669349711121315891
        );

        vk.IC[123] = Pairing.G1Point(
            18132293073241796173371803142784663429561058384641695740127009983973076772638,
            8117681484500084228653681755158462186018475490143238067987248282434373923666
        );

        vk.IC[124] = Pairing.G1Point(
            16003804338461933921359144490879364407401889189916585114116648363938204497308,
            6382385158448629960144128548964829493967471096914617940000603527056852470808
        );

        vk.IC[125] = Pairing.G1Point(
            21094351375041109656314443875723030623982483073685567628745862063292573107618,
            11442589629880063501230581821079510930060153885965551662221756706710216761457
        );

        vk.IC[126] = Pairing.G1Point(
            6275683022368240419135522810838266655026522617967427554590679423734488887744,
            20468867850869599818362728796436457388697240683220079216680401240952489679292
        );

        vk.IC[127] = Pairing.G1Point(
            10953292363697672467717355583896975480697256137527911599732333343080706705854,
            1917458101879466222751349810897726112556274322534024563090435867582596754134
        );

        vk.IC[128] = Pairing.G1Point(
            20046514982855655008374189134189185145038021998688901621699631118209594156953,
            1916051117793274005425019615568222527314890697673474781570841195663890300724
        );

        vk.IC[129] = Pairing.G1Point(
            2597078861242976772441935086624035031778331686070138642994828349821138056191,
            8582282241180248949189644787552513063118429412135262684405300529350206040610
        );

        vk.IC[130] = Pairing.G1Point(
            8196323175875924129960131790819590913066325462075310708436327361528428114774,
            11510591713718353937807358981229858542392470697259046523008400554982059478496
        );

        vk.IC[131] = Pairing.G1Point(
            4440883014282027923223082614888717914411224923312433221092115746917527066515,
            9979316126882615629826715856413681148830212507520582141672181632826706351466
        );

        vk.IC[132] = Pairing.G1Point(
            14184005368725284245353311581616254779733342753877291942883631933171498018903,
            2110186562989982398207153630015155632783991232997104612001232300245508923967
        );

        vk.IC[133] = Pairing.G1Point(
            7067126208181681858887754371486714501499089664830929838448635085270903660295,
            17692446449479164020600604795880200563940175630694666536022287816588952982309
        );

        vk.IC[134] = Pairing.G1Point(
            16036138114402897188699554578400601375291241879056184805856778083288810994351,
            15339681341799282276098622509228630459738847168569851225751387807860914737142
        );

        vk.IC[135] = Pairing.G1Point(
            2828544045215909725225837839715424783038722285024530858071888494824354736963,
            13527763037055139168178259515111033841967361929396107785118764223250867425138
        );

        vk.IC[136] = Pairing.G1Point(
            1245844375343683262489614883780305189813117206004161969555490118571729847989,
            2629539428586420669570167044249225636694869841353334967407415694451482047769
        );

        vk.IC[137] = Pairing.G1Point(
            18546868602871872203878894985232538031294913260889616778478163154240870305304,
            4888242032804669646555012806192710982826972868262066918872750847088493138044
        );

        vk.IC[138] = Pairing.G1Point(
            14214280168729151087111298087543926359294518361443928793499107759397066493733,
            20578592311651003278758285467124506895484885517445869010475225940394328573422
        );

        vk.IC[139] = Pairing.G1Point(
            15958107588535972445823706089378787524187224303644553870504229385287700055544,
            8400987537974282806321025728033689679063568166139868892078255745272442852940
        );

        vk.IC[140] = Pairing.G1Point(
            14222239498434799693492157382837371550007369375038562068858602455787417153204,
            10488554830320794667757923814085025622612177365105816323730185504994132319659
        );

        vk.IC[141] = Pairing.G1Point(
            10971185052439277324738975753041523273246791339273600384550776289981247032828,
            18002657770999867736214687682319380784271013957644375807457708626382382231509
        );

        vk.IC[142] = Pairing.G1Point(
            10618301268153388298032025673756966849745364978094000023743679462464607490269,
            7526659234410616101802945688649752280357359625392604807277183262370016716403
        );

        vk.IC[143] = Pairing.G1Point(
            9156653438961758644814435613907855116655168529022243051503435980484871964127,
            5573976128615426728534736797563605073864735574533718677114896951380241067493
        );

        vk.IC[144] = Pairing.G1Point(
            16097438649553767534530104310591938633528612207991486402187919334729296539917,
            4887224744135748123430175122752398053183774540716047549853131711530159058299
        );

        vk.IC[145] = Pairing.G1Point(
            1913748531348550653167903868409025446824699231693321823785388905634617615501,
            1377534715110923140950907832850559173822508873755774419848005532031186721709
        );

        vk.IC[146] = Pairing.G1Point(
            16265345175737839027053437683373802108969469003660257599851665085901723571832,
            17170537642121789421999878660448321526865855407700016790663077634042607585338
        );

        vk.IC[147] = Pairing.G1Point(
            4724295436050340103230488421790314960552290721395741405993179140958676862328,
            7449744439923771970180864706821074793312608150821152033550395169637250620563
        );

        vk.IC[148] = Pairing.G1Point(
            8174214475915448292807626154070029954632735625572706815261297439086982598837,
            2818035147445752492886016365860296129857228926909540472826046625893499226434
        );

        vk.IC[149] = Pairing.G1Point(
            4813396087459926164358187689914171760386374206688890987666811571695944467235,
            2762274280784495582840960054773409710756229271934535010205738733261052340634
        );

        vk.IC[150] = Pairing.G1Point(
            16682648850531140904109041854205268948901077474798333268105708007905744903697,
            3561684909086180000010815121560731920718471122151464146472024517843930324573
        );

        vk.IC[151] = Pairing.G1Point(
            18488463091810755678107574542404746788437730199141484991893614420301923862902,
            9900667173585780915796525923886915551995842044640127201439766473349044837754
        );

        vk.IC[152] = Pairing.G1Point(
            21147034235547749752743336694400255786576569027415326154620020612912605728497,
            13747087019114437504425682316175334648876489751031334566785978158781994565657
        );

        vk.IC[153] = Pairing.G1Point(
            15951495581888513919153590868363286659179256243845323363189614060102072785538,
            13362769298388420131896763210782624143385614927459410783932871865704306515863
        );

        vk.IC[154] = Pairing.G1Point(
            7218269060893455354484352699067184037607542334480048751888313890510664532988,
            4770822464573346794988755423554008547032039791632704768207104469332643130731
        );

        vk.IC[155] = Pairing.G1Point(
            6629983227099409830405505324539717904638436197062093235793856239339639151477,
            4747218791148297425053328011640518726112333277190566651243508416551746147222
        );

        vk.IC[156] = Pairing.G1Point(
            11080540806835800330108325188340295068576193494133795912978171615442607104285,
            13638434070318617883148803201093650289988531900297534535138221612576281919335
        );

        vk.IC[157] = Pairing.G1Point(
            9210275510966629382855317725427326146500528014631616370707078106437921710349,
            2755764562119962053933567967172091605003872249441612937258432165078645746815
        );

        vk.IC[158] = Pairing.G1Point(
            8137786247702189245952988044903024821847554632116752460778900973389777518383,
            10839933924738095579550979703560329684857852244863915138716214426517426186629
        );

        vk.IC[159] = Pairing.G1Point(
            18133004905710268798502920924761401339146447641113925602694418638917230327394,
            8268567384968373313976188471839158046454750192911692065667857595442546233638
        );

        vk.IC[160] = Pairing.G1Point(
            196873674324860060952284471631277470373305277900172198830775567158302204727,
            10736626272784203116467847490695627869727716691488383140941446534701646574981
        );

        vk.IC[161] = Pairing.G1Point(
            12698609190918373767539369968333504001913333283242214391192512486506364270673,
            16333578471246571670087947701499078581613412161664709102761416609406728459707
        );

        vk.IC[162] = Pairing.G1Point(
            15622735330524291797808495180942595763742887801287859745491065901274015260786,
            13427459626111282273605033387462227012600320799954072456754318984961292285337
        );

        vk.IC[163] = Pairing.G1Point(
            11896224710608124791566016014135682208523666315725889598128635665711752517391,
            4816571026348841152487561720580433176060683912247394146916713926869505254088
        );

        vk.IC[164] = Pairing.G1Point(
            12058478657008011531400554639686249489943553498556510225928601440443431455178,
            19191462760785427744087178745135569550533616165740751570541854746077075184915
        );

        vk.IC[165] = Pairing.G1Point(
            14610105052850413689074367497628828272923640226016339482312324663227442265089,
            1768549960425272886126015960652473290601415542285946970091735572706395012214
        );

        vk.IC[166] = Pairing.G1Point(
            7271931935777624181091476130857994245507440099361263527802959712046335241275,
            5289781274067211517711717599628716916313036534644328764517578291299628323070
        );

        vk.IC[167] = Pairing.G1Point(
            21155877764889107516412917299715369494030628963003253130408805112650195480978,
            9091815766269414354823899643345192298739864827772457426214390683163296951177
        );

        vk.IC[168] = Pairing.G1Point(
            21064596575772764888260154391119438817532717982872305926048085831569552296601,
            14201724491795154184536264481566692317120419547525023542828761796251671005019
        );

        vk.IC[169] = Pairing.G1Point(
            20188585631341792274309160613338617777378681079429058025026390476348259011192,
            14304023030996006419755784188300720044007763781316364012128081499931630103693
        );

        vk.IC[170] = Pairing.G1Point(
            2010033424336275184772190192455552244337077785847835681364351354404278819136,
            3531317630721290755608656429584940863836955507463828952850615096813246598864
        );

        vk.IC[171] = Pairing.G1Point(
            19773353524678425769217139468720593764531095076526788978704433724526167377136,
            13564028740273109936567637221173519586949767327494824393645581225452895740033
        );

        vk.IC[172] = Pairing.G1Point(
            12575984781404011608238132890838600675395180322025269804425862267830559815501,
            17786355596305301381112869064101897578310294392067647131450549899231830942698
        );

        vk.IC[173] = Pairing.G1Point(
            1842408703466437582809722130602649460536184851318156089761848037458314473780,
            6328637353906124620988409474556183262941722665023170378124095818110603981018
        );

        vk.IC[174] = Pairing.G1Point(
            1079190541670093781399272871915440450632062130192475956551495749466339098762,
            459330478207602819592978730684849609660337808874176308824161722934509318641
        );

        vk.IC[175] = Pairing.G1Point(
            10577597643350013899846715049465408583106487768478602624862072432240616174726,
            3830843666387395541430470012378047311435091842262781969115452635703335669055
        );

        vk.IC[176] = Pairing.G1Point(
            18943414425043905254385067363818086118583194568367434622490718563972694747235,
            6407454290175487762487810912411974296775069860675134617993831708311223733134
        );

        vk.IC[177] = Pairing.G1Point(
            10110356403722732703434992485953000818412992236034324038722919131428351282992,
            10176794781397420570943314565503294592849655674114177298619334115520046124654
        );

        vk.IC[178] = Pairing.G1Point(
            14193042721382169014958825025581643407695216796970683280930290864732311168837,
            10499065512365521510437038985212259854798603430330816016039386532056533806404
        );

        vk.IC[179] = Pairing.G1Point(
            14712547380121127022516868398345057232338532382260511598858245543282059874182,
            10242824242321520915834925051635294471452143878952810637372989119437628981323
        );

        vk.IC[180] = Pairing.G1Point(
            12143008337880707953237980109797697574680073189350346204234790675019888200441,
            12662389098586272391120315924185832076312257109943019188778925443437735201723
        );

        vk.IC[181] = Pairing.G1Point(
            8411253699422060973664594051351959011598933564374514423317341252133555985935,
            9910724370766007830697247192235059276812533567462419689624858807012774468866
        );

        vk.IC[182] = Pairing.G1Point(
            8237794426028374963159690682493591759586085637120587993856277072656581830801,
            16467808705591433616541137268794689156095161458859876915330011171028131769643
        );

        vk.IC[183] = Pairing.G1Point(
            12800153778798266748520331836658050620102414006903294257522704947679242630698,
            21533297359750585754304719778844842622683528110506887536480684586308736086751
        );

        vk.IC[184] = Pairing.G1Point(
            6191868258276320245337227226598784366349420568040694353831663564804336600469,
            9543774046747500866797479624042056153738792733271032873302030673761461759075
        );

        vk.IC[185] = Pairing.G1Point(
            9521106952823153484475800187952800605377151170979760950670583449424197312738,
            7745009572793359478572273126716200853616660737159532125846470192754429388722
        );

        vk.IC[186] = Pairing.G1Point(
            12820318163628378578440838010259032883143001420662443578393285915545241961803,
            15558053969381417433685042771360092097012222032885217708676507485543010303033
        );

        vk.IC[187] = Pairing.G1Point(
            18781084136267354671420438818078670010449965719450171547978978778617131736337,
            16720020998633024084246483299170952024678806304084420837920085815812551259986
        );
    }

    function verify(
        uint[] memory input,
        Proof memory proof
    ) internal view returns (uint) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        VerifyingKey memory vk = verifyingKey();
        require(input.length + 1 == vk.IC.length, "verifier-bad-input");
        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        for (uint i = 0; i < input.length; i++) {
            require(
                input[i] < snark_scalar_field,
                "verifier-gte-snark-scalar-field"
            );
            vk_x = Pairing.addition(
                vk_x,
                Pairing.scalar_mul(vk.IC[i + 1], input[i])
            );
        }
        vk_x = Pairing.addition(vk_x, vk.IC[0]);
        if (
            !Pairing.pairingProd4(
                Pairing.negate(proof.A),
                proof.B,
                vk.alfa1,
                vk.beta2,
                vk_x,
                vk.gamma2,
                proof.C,
                vk.delta2
            )
        ) return 1;
        return 0;
    }

    //msg =  input[64:64 + 111] ===
    /// @return r  bool true if proof is valid
    function verifyProof(
        uint[2] memory a,
        uint[2][2] memory b,
        uint[2] memory c,
        uint[] memory input
    ) public view returns (bool r) {
        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);
        uint[] memory inputValues = new uint[](input.length);
        for (uint i = 0; i < input.length; i++) {
            inputValues[i] = input[i];
        }
        if (verify(inputValues, proof) == 0) {
            return true;
        } else {
            return false;
        }
    }
}
